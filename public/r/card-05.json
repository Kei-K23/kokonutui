{
  "name": "card-05",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "import { Activity, Heart, Flame, Timer } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Card05Props {\n    metrics?: {\n        label: string;\n        value: string;\n        icon: JSX.Element;\n        color: string;\n        progress: number;\n    }[];\n    goals?: {\n        title: string;\n        progress: number;\n        color: string;\n    }[];\n}\n\nexport default function Card05({\n    metrics = [\n        {\n            label: \"Move\",\n            value: \"486\",\n            icon: <Flame className=\"w-4 h-4\" />,\n            color: \"rose\",\n            progress: 85,\n        },\n        {\n            label: \"Exercise\",\n            value: \"48\",\n            icon: <Timer className=\"w-4 h-4\" />,\n            color: \"green\",\n            progress: 92,\n        },\n        {\n            label: \"Heart\",\n            value: \"72\",\n            icon: <Heart className=\"w-4 h-4\" />,\n            color: \"blue\",\n            progress: 78,\n        },\n    ],\n    goals = [\n        { title: \"Daily Move Goal\", progress: 85, color: \"rose\" },\n        { title: \"Exercise Time\", progress: 92, color: \"green\" },\n        { title: \"Stand Hours\", progress: 75, color: \"blue\" },\n    ],\n}: Card05Props) {\n    return (\n        <div className=\"w-full max-w-sm mx-auto\">\n            <div className={cn(\n                \"relative overflow-hidden\",\n                \"bg-white dark:bg-black\",\n                \"rounded-[2.5rem]\",\n                \"transition-all duration-300\",\n                \"hover:shadow-2xl\",\n                \"hover:shadow-zinc-200/50 dark:hover:shadow-zinc-900/30\",\n                \"border border-zinc-200 dark:border-zinc-800\"\n            )}>\n                <div className=\"p-8\">\n                    {/* Header */}\n                    <div className=\"flex items-center gap-3 mb-8\">\n                        <div className={cn(\n                            \"p-2.5 rounded-2xl\",\n                            \"bg-zinc-100 dark:bg-zinc-800\",\n                            \"ring-1\",\n                            \"ring-zinc-200 dark:ring-white/10\"\n                        )}>\n                            <Activity className=\"w-5 h-5 text-zinc-900 dark:text-white\" />\n                        </div>\n                        <div>\n                            <h3 className=\"text-lg font-medium text-zinc-900 dark:text-white\">\n                                Activity\n                            </h3>\n                            <p className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                                Today's Progress\n                            </p>\n                        </div>\n                    </div>\n\n                    {/* Metrics Rings */}\n                    <div className=\"grid grid-cols-3 gap-6 mb-8\">\n                        {metrics.map((metric) => (\n                            <div\n                                key={metric.label}\n                                className=\"relative flex flex-col items-center\"\n                            >\n                                <div className=\"relative w-20 h-20 mb-3\">\n                                    {/* Background Ring */}\n                                    <div className={cn(\n                                        \"absolute inset-0 rounded-full\",\n                                        \"border-[3px]\",\n                                        \"border-zinc-100 dark:border-zinc-800\"\n                                    )} />\n                                    \n                                    {/* Progress Ring */}\n                                    <svg\n                                        className=\"absolute inset-0 w-full h-full -rotate-90\"\n                                        viewBox=\"0 0 100 100\"\n                                    >\n                                        <circle\n                                            className={cn(\n                                                `text-${metric.color}-500`,\n                                                \"stroke-current\",\n                                                \"transition-all duration-500\"\n                                            )}\n                                            cx=\"50\"\n                                            cy=\"50\"\n                                            r=\"48\"\n                                            fill=\"none\"\n                                            strokeWidth=\"4\"\n                                            strokeLinecap=\"round\"\n                                            strokeDasharray={`${metric.progress * 3}, 1000`}\n                                        />\n                                    </svg>\n\n                                    {/* Center Content */}\n                                    <div className={cn(\n                                        \"absolute inset-0\",\n                                        \"flex flex-col items-center justify-center\",\n                                        \"text-zinc-900 dark:text-white\"\n                                    )}>\n                                        <span className=\"text-xl font-semibold\">\n                                            {metric.value}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className={cn(\n                                    \"flex items-center gap-1.5\",\n                                    \"px-3 py-1.5 rounded-xl\",\n                                    \"bg-zinc-100/80 dark:bg-zinc-800/50\",\n                                    \"ring-1\",\n                                    \"ring-zinc-200 dark:ring-white/10\",\n                                    \"backdrop-blur-sm\"\n                                )}>\n                                    <div className={`text-${metric.color}-500`}>\n                                        {metric.icon}\n                                    </div>\n                                    <span className=\"text-sm text-zinc-600 dark:text-zinc-300\">\n                                        {metric.label}\n                                    </span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n\n                    {/* Goals Progress */}\n                    <div className=\"space-y-4\">\n                        {goals.map((goal) => (\n                            <div key={goal.title} className=\"space-y-2\">\n                                <div className=\"flex items-center justify-between text-sm\">\n                                    <span className=\"text-zinc-500 dark:text-zinc-400\">\n                                        {goal.title}\n                                    </span>\n                                    <span className=\"text-zinc-900 dark:text-white\">\n                                        {goal.progress}%\n                                    </span>\n                                </div>\n                                <div className=\"h-1 rounded-full bg-zinc-100 dark:bg-zinc-800 overflow-hidden\">\n                                    <div\n                                        className={cn(\n                                            \"h-full rounded-full\",\n                                            `bg-${goal.color}-500`,\n                                            \"transition-all duration-500\"\n                                        )}\n                                        style={{ width: `${goal.progress}%` }}\n                                    />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Glossy Overlay */}\n                <div className={cn(\n                    \"absolute inset-0\",\n                    \"pointer-events-none\",\n                    \"bg-gradient-to-br\",\n                    \"from-white/10 to-transparent dark:from-white/5 dark:to-transparent\",\n                    \"rounded-[2.5rem]\"\n                )} />\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/kokonutui/card/card-05.tsx",
      "target": "/components/kokonutui/card-05.tsx"
    }
  ]
}