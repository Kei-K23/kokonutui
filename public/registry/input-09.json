{
  "name": "input-09",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "popover"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Smile } from \"lucide-react\";\nimport {\n    Popover,\n    PopoverContent,\n    PopoverTrigger,\n} from \"@/components/ui/popover\";\n\ninterface ReactionType {\n    emoji: string;\n    label: string;\n    count: number;\n}\n\nconst initialReactions: ReactionType[] = [\n    { emoji: \"üëç\", label: \"Like\", count: 0 },\n    { emoji: \"‚ù§Ô∏è\", label: \"Love\", count: 0 },\n    { emoji: \"üòÇ\", label: \"Haha\", count: 0 },\n    { emoji: \"üéâ\", label: \"Celebrate\", count: 0 },\n    { emoji: \"ü§î\", label: \"Thinking\", count: 0 },\n    { emoji: \"üò¢\", label: \"Sad\", count: 0 },\n];\n\nexport default function Input_09() {\n    const [reactions, setReactions] =\n        useState<ReactionType[]>(initialReactions);\n\n    function handleReaction(selectedEmoji: string) {\n        setReactions((prev) =>\n            prev.map((reaction) =>\n                reaction.emoji === selectedEmoji\n                    ? { ...reaction, count: reaction.count === 1 ? 0 : 1 }\n                    : reaction\n            )\n        );\n    }\n\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className=\"flex flex-wrap gap-1.5\">\n                {reactions.map(\n                    ({ emoji, count, label }) =>\n                        count > 0 && (\n                            <button\n                                key={emoji}\n                                type=\"button\"\n                                onClick={() => handleReaction(emoji)}\n                                className={cn(\n                                    \"inline-flex items-center gap-1.5 px-2.5 py-1\",\n                                    \"rounded-full text-sm\",\n                                    \"bg-zinc-100 hover:bg-zinc-200\",\n                                    \"dark:bg-zinc-800 dark:hover:bg-zinc-700\",\n                                    \"transition-all transform active:scale-95\"\n                                )}\n                            >\n                                <span>{emoji}</span>\n                                <span className=\"text-zinc-600 dark:text-zinc-400\">\n                                    {count}\n                                </span>\n                            </button>\n                        )\n                )}\n\n                <Popover>\n                    <PopoverTrigger asChild>\n                        <button\n                            type=\"button\"\n                            className={cn(\n                                \"inline-flex items-center gap-1.5 px-2.5 py-1\",\n                                \"rounded-full text-sm\",\n                                \"bg-zinc-100 hover:bg-zinc-200\",\n                                \"dark:bg-zinc-800 dark:hover:bg-zinc-700\",\n                                \"transition-all transform active:scale-95\"\n                            )}\n                        >\n                            <Smile className=\"w-4 h-4\" />\n                            <span>React</span>\n                        </button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-[280px] p-2\">\n                        <div className=\"grid grid-cols-3 gap-1\">\n                            {reactions.map(({ emoji, label, count }) => (\n                                <button\n                                    key={emoji}\n                                    type=\"button\"\n                                    onClick={() => handleReaction(emoji)}\n                                    className={cn(\n                                        \"flex flex-col items-center gap-1 p-2\",\n                                        \"rounded-lg hover:bg-zinc-100 dark:hover:bg-zinc-800\",\n                                        \"transition-colors\",\n                                        count > 0 &&\n                                            \"bg-zinc-100 dark:bg-zinc-800\"\n                                    )}\n                                >\n                                    <span className=\"text-2xl\">{emoji}</span>\n                                    <span className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                                        {label}\n                                    </span>\n                                </button>\n                            ))}\n                        </div>\n                    </PopoverContent>\n                </Popover>\n            </div>\n        </div>\n    );\n}\n",
      "path": "/components/kokonutui/input/input-09.tsx",
      "target": "/components/kokonutui/input-09.tsx"
    }
  ]
}