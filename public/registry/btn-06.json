{
  "name": "btn-06",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { Check, Copy } from \"lucide-react\";\nimport { useCopyToClipboard } from \"@/hooks/use-copy-to-clipboard\";\n\ninterface Btn06Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    textToCopy: string;\n    successDuration?: number;\n}\n\nexport default function Btn06({\n    className,\n    textToCopy,\n    successDuration = 1000,\n    ...props\n}: Btn06Props) {\n    const { isCopied, copyToClipboard } = useCopyToClipboard({\n        timeout: successDuration,\n    });\n\n    function handleCopy() {\n        if (isCopied) return;\n        copyToClipboard(textToCopy);\n    }\n\n    return (\n        <Button\n            className={cn(\n                \"min-w-40 relative group\",\n                \"bg-emerald-50 dark:bg-emerald-950\",\n                \"hover:bg-emerald-100 dark:hover:bg-emerald-900\",\n                \"text-emerald-600 dark:text-emerald-300\",\n                \"border border-emerald-200 dark:border-emerald-800\",\n                isCopied && \"bg-emerald-100 dark:bg-emerald-900\",\n                className\n            )}\n            onClick={handleCopy}\n            {...props}\n        >\n            <div\n                className={cn(\n                    \"w-full flex items-center justify-center gap-2\",\n                    \"transition-transform duration-200\",\n                    isCopied && \"scale-105\"\n                )}\n            >\n                {isCopied ? (\n                    <>\n                        <Check className=\"w-4 h-4 text-emerald-500\" />\n                        <span>Copied!</span>\n                    </>\n                ) : (\n                    <>\n                        <Copy\n                            className={cn(\n                                \"w-4 h-4 transition-transform duration-200\",\n                                \"group-hover:scale-110\"\n                            )}\n                        />\n                        <span>Copy code</span>\n                    </>\n                )}\n            </div>\n        </Button>\n    );\n}\n",
      "path": "/components/button/btn-06.tsx",
      "target": "components/button/btn-06.tsx"
    },
    {
      "type": "registry:hook",
      "content": "import * as React from \"react\";\n\nexport function useCopyToClipboard({\n    timeout = 2000,\n    onCopy,\n}: {\n    timeout?: number;\n    onCopy?: () => void;\n} = {}) {\n    const [isCopied, setIsCopied] = React.useState(false);\n\n    const copyToClipboard = (value: string) => {\n        if (typeof window === \"undefined\" || !navigator.clipboard.writeText) {\n            return;\n        }\n\n        if (!value) return;\n\n        navigator.clipboard.writeText(value).then(() => {\n            setIsCopied(true);\n\n            if (onCopy) {\n                onCopy();\n            }\n\n            setTimeout(() => {\n                setIsCopied(false);\n            }, timeout);\n        }, console.error);\n    };\n\n    return { isCopied, copyToClipboard };\n}\n",
      "path": "/hooks/use-copy-to-clipboard.ts",
      "target": "hooks/use-copy-to-clipboard.ts"
    }
  ]
}